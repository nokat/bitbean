# Copyright (c) 2009-2010 Satoshi Nakamoto
# Copyright (c) Bean Core www.bitbean.org
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

BOOST_SUFFIX?==mgw49-mt-s-1_59

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"C:\deps\boost_1_59_0" \
 -I"C:\deps\db-5.3.23.NC\build_unix" \
 -I"C:\deps\openssl-1.0.1j\include"

LIBPATHS= \
 -L"$(CURDIR)\leveldb" \
 -L"C:\deps\boost_1_59_0\stage\lib" \
 -L"C:\deps\db-5.3.23\build_unix" \
 -L"C:\deps\openssl-1.0.1j"

LIBS= \
 -l leveldb \
 -l boost_system-mgw49-mt-s-1_59 \
 -l boost_filesystem-mgw49-mt-s-1_59 \
 -l boost_program_options-mgw49-mt-s-1_59 \
 -l boost_thread-mgw49-mt-s-1_59 \
 -l boost_chrono-mgw49-mt-s-1_59 \
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE
DEBUGFLAGS=-g
CFLAGS=-mthreads -O3 -msse2 -w -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat -static

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/keystore.o \
    obj/core.o \
    obj/main.o \
    obj/miner.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitbeanrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcmining.o \
    obj/rpcwallet.o \
    obj/rpcblockchain.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o \
    obj/hash.o \
    obj/kernel.o \
    obj/pbkdf2.o \
    obj/chainparams.o

all: BitBeand.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	cd leveldb; make; cd ..
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

BitBeand.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

clean:
	-del /Q BitBeand
	-del /Q obj\*

FORCE:
